# name: Deploy to VPS

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#     types: [closed]

# jobs:
#   deploy:
#     # DÃ©ployer seulement si le push est sur main OU si la PR est merged
#     if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: ðŸš€ DÃ©ploiement sur VPS
#       uses: appleboy/ssh-action@v1.0.0
#       with:
#         host: ${{ secrets.VPS_HOST }}
#         username: ${{ secrets.VPS_USERNAME }}
#         key: ${{ secrets.VPS_SSH_KEY }}
#         port: ${{ secrets.VPS_PORT }}
#         script: |
#           echo "ðŸ“¦ DÃ©but du dÃ©ploiement..."
          
#           # Se dÃ©placer dans le rÃ©pertoire du projet
#           cd "${{ secrets.VPS_PROJECT_PATH }}" || exit 1
          
#           # Sauvegarder les fichiers locaux sensibles
#           echo "ðŸ’¾ Sauvegarde des fichiers locaux..."
#           if [ -f "deploy/systemd/streams_dl.service" ]; then
#             cp deploy/systemd/streams_dl.service deploy/systemd/streams_dl.service.backup
#           fi
          
#           # RÃ©cupÃ©rer les derniÃ¨res modifications
#           echo "ðŸ”„ Mise Ã  jour du code..."
#           git fetch origin
#           # Sauvegarder les modifications locales non commitÃ©es
#           git stash
#           git reset --hard origin/main
#           # Restaurer les modifications locales si besoin
#           git stash pop || true
          
#           # Restaurer le fichier service local
#           if [ -f "deploy/systemd/streams_dl.service.backup" ]; then
#             mv deploy/systemd/streams_dl.service.backup deploy/systemd/streams_dl.service
#           fi
          
#           # Activer l'environnement virtuel et mettre Ã  jour les dÃ©pendances
#           echo "ðŸ“š Installation des dÃ©pendances..."
#           # Lancer le script de dÃ©ploiement
#           echo "ðŸš€ ExÃ©cution du script de dÃ©ploiement..."
#           if [ -x deploy/deploy.sh ]; then
#             ./deploy/deploy.sh
#           else
#             echo "Deploy script not found or not executable"
#             exit 1
#           fi
          
#           echo "ðŸŽ‰ DÃ©ploiement terminÃ© avec succÃ¨s!"
#           echo "ðŸš€ ExÃ©cution du script de dÃ©ploiement..."
#           ./deploy/deploy.sh
          
#           echo "ðŸŽ‰ DÃ©ploiement terminÃ© avec succÃ¨s!"
